<%#
LuCI - Lua Configuration Interface
Copyright 2008 Steven Barth <steven@midlink.org>
Copyright 2008 Jo-Philipp Wich <xm@leipzig.freifunk.net>

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

$Id: header.htm 4891 2009-06-22 10:23:21Z jow $

-%>
<%
require "luci.sys"
local i18n = require("luci.i18n")
require("luci.http").prepare_content("text/html")
local uci = require("luci.model.uci").cursor()
local lang = uci:get("system","main","language") 
i18n.load("admin-core",lang)
i18n.setlanguage(lang)

-%>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html;charset=utf-8"  />
<title>.::Welcome to the Web-Based Configurator::.</title>
<link href="<%=media%>/css/expert.css" rel="stylesheet" type="text/css" />
<style> 
.on {display:on}
.off {display:none}
td {white-space: nowrap;}
</style>
<link href="<%=media%>/css/expert.css" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="<%=media%>/js/baseJS.js" ></script>
<script language="JavaScript" type="text/javascript">

function show_div(show,id) 
{
	if(show)
		document.getElementById(id).className  = "on" ;
    else
    	document.getElementById(id).className  = "off" ;
}

function dov6DNSConfig(para)
{
	if(para.value == "disable" )
		show_div(true, "div_static_v6dns");
	else
		show_div(false, "div_static_v6dns");
}

function doDNSConfig(para)
{
	if(para.value == "disable" )
		show_div(true, "div_static_dns");
	else
		show_div(false, "div_static_dns");
}

function doAddrConfig(para)
{
	if(para.value == "static" ) {
		show_div(true, "div_static_addr");
		document.wanCfg.auto_dns[0].disabled = true;
		document.wanCfg.auto_dns[1].checked = true;
		show_div(true, "div_static_dns");
		show_div(false, "div_dhcp_option");
	}
	else {
		document.wanCfg.auto_dns[0].disabled = false;
		
		show_div(false, "div_static_addr");
		show_div(true, "div_dhcp_option");
		
		if ( document.wanCfg.auto_dns[1].checked == true )
			show_div(true, "div_static_dns");
	}
}

function do6RDConfig(para)
{
	if(para.value == "static" ) {
		show_div(true, "div_static_6rd");
	}
	else {		
		show_div(false, "div_static_6rd");
	}
}

function do6RDenableck(para)
{
	if(para.checked == true ) {
		show_div(true, "6RD_enable");
	}
	else{
		show_div(false, "6RD_enable");
	}
}

function atoi(str, num)
{
	i = 1;
	if (num != 1) {
		while (i != num && str.length != 0) {
			if (str.charAt(0) == '.') {
				i++;
			}
			str = str.substring(1);
		}
		if (i != num)
			return -1;
	}

	for (i=0; i<str.length; i++) {
		if (str.charAt(i) == '.') {
			str = str.substring(0, i);
			break;
		}
	}
	if (str.length == 0)
		return -1;
	return parseInt(str, 10);
}

function checkRange(str, num, min, max)
{
	d = atoi(str, num);
	if (d > max || d < min)
		return false;
	return true;
}

function isAllNum(str)
{
	for (var i=0; i<str.length; i++) {
		if ((str.charAt(i) >= '0' && str.charAt(i) <= '9') || (str.charAt(i) == '.' ))
			continue;
		return 0;
	}
	return 1;
}

function checkIpAddr(field, ismask)
{
	if (field.value == "") {
		alert("<%:IP_Error_1%>");
		field.value = field.defaultValue;
		field.focus();
		return false;
	}
	if (isAllNum(field.value) == 0) {
		alert("<%:IP_Error_2%>");
		field.value = field.defaultValue;
		field.focus();
		return false;
	}

	if (ismask) {
		if ((!checkRange(field.value, 1, 0, 255)) ||
				(!checkRange(field.value, 2, 0, 255)) ||
				(!checkRange(field.value, 3, 0, 255)) ||
				(!checkRange(field.value, 4, 0, 255)))
		{
			alert("<%:IP_Error_3%>");
			field.value = field.defaultValue;
			field.focus();
			return false;
		}
	}
	else {
		if ((!checkRange(field.value, 1, 0, 255)) ||
				(!checkRange(field.value, 2, 0, 255)) ||
				(!checkRange(field.value, 3, 0, 255)) ||
				(!checkRange(field.value, 4, 1, 254)))
		{
			alert("<%:IP_Error_3%>");
			field.value = field.defaultValue;
			field.focus();
			return false;
		}
	}
	return true;
}

function CheckValue()
{
	showWebMessage( 1 , "<%:Message%>" , "<%:msg_config%>" );
	
    if (document.wanCfg.connectionType.options.selectedIndex == 0) //PPPoE
    {
         if(document.wanCfg.pppoeUser.value == "")
         {
            alert("<%:WAN_Error_5%>");
			return false;
         }
         if(document.wanCfg.pppoePass.value == "")
         {
            alert("<%:WAN_Error_6%>");
			return false;
         }
		if ((document.wanCfg.pppoeMTU.value < 1360) || (document.wanCfg.pppoeMTU.value > 1492)) {
			alert("<%:WAN_Error_21%>");
			return false;
		}
		
		if (isAllNum(document.wanCfg.pppoeMTU.value) == 0) {
			alert("<%:WAN_Error_22%>");
			document.wanCfg.pppoeMTU.value = document.wanCfg.pppoeMTU.defaultValue;
			document.wanCfg.pppoeMTU.focus();
			return false;
		}
		
	    if (document.wanCfg.pppoeIdleTime.disabled == false)
		{
			if (document.wanCfg.pppoeIdleTime.value == "")
			{
				alert("<%:WAN_Error_11%>");
				document.wanCfg.pppoeIdleTime.focus();
				document.wanCfg.pppoeIdleTime.select();
				return false;
			}
			
			if (isAllNum(document.wanCfg.pppoeIdleTime.value) == 0) 
			{
		       alert("<%:WAN_Error_2%>");
		       document.wanCfg.pppoeIdleTime.value = document.wanCfg.pppoeIdleTime.defaultValue;
		       document.wanCfg.pppoeIdleTime.focus();
		       return false;
	        }
        }
		
		if (document.wanCfg.pppoeWanIPMode[1].checked == true) {
			if (!checkIpAddr(document.wanCfg.pppoeWanIpAddr, false))
				return false;
		}
    }
	/*else if (document.wanCfg.connectionType.options.selectedIndex == 1) //PPTP
    {
        if (document.wanCfg.pptp_serverIp.value == "")
		{
				alert("<%:IP_Error_1%>");
				return false;
        }else if (!checkIpAddr(document.wanCfg.pptp_serverIp, false)){
				return false;
		}
		
		if (document.wanCfg.pptp_config_ip[1].checked == true) //Static IP
        {
             if (!checkIpAddr(document.wanCfg.pptp_staticIp, false))
			     return false;
		     if (!checkIpAddr(document.wanCfg.pptp_staticNetmask, true))
			     return false;
		     if (document.wanCfg.pptp_staticGateway.value != "")
		     {
			     if (!checkIpAddr(document.wanCfg.pptp_staticGateway, false))
				     return false;
             }
	   	}
		 
		if(document.wanCfg.pptpUser.value == "")
        {
            alert("<%:WAN_Error_5%>");
			return false;
        }
		
        if(document.wanCfg.pptpPass.value == "")
        {
            alert("<%:WAN_Error_6%>");
			return false;
        }
		
		if ((document.wanCfg.pptpMTU.value < 1360) || (document.wanCfg.pptpMTU.value > 1492)) 
		{
			alert("<%:WAN_Error_21%>");
            return false;
		}
		
		if (isAllNum(document.wanCfg.pptpMTU.value) == 0)
		{
			alert("<%:WAN_Error_22%>");
			document.wanCfg.pptpMTU.value = document.wanCfg.pptpMTU.defaultValue;
			document.wanCfg.pptpMTU.focus();
			return false;
		}
		
	    if (document.wanCfg.pptpIdleTime.disabled == false)
		{
			if (document.wanCfg.pptpIdleTime.value == "")
			{
				alert("<%:WAN_Error_11%>");
				document.wanCfg.pptpIdleTime.focus();
				document.wanCfg.pptpIdleTime.select();
				return false;
			}
			if (isAllNum(document.wanCfg.pptpIdleTime.value) == 0) 
			{
		       alert("<%:WAN_Error_2%>");
		       document.wanCfg.pptpIdleTime.value = document.wanCfg.pptpIdleTime.defaultValue;
		       document.wanCfg.pptpIdleTime.focus();
		       return false;
	        }
        }
		
		if (document.wanCfg.pptpWanIPMode[1].checked == true) {
			if (!checkIpAddr(document.wanCfg.pptpWanIpAddr, false))
				return false;
		}
    }*/
//  else if(document.wanCfg.connectionType.options.selectedIndex == 2)	
    else if(document.wanCfg.connectionType.options.selectedIndex == 1)//Index 1 seems could not be passed if only have two option.
    {   
		// not IPv6 Only
		if( document.wanCfg.IP_Mode.options.selectedIndex == 0 || document.wanCfg.IP_Mode.options.selectedIndex == 1 )
		{ 
			//Static IP
			if (document.wanCfg.WAN_IP_Auto[1].checked == true)
			{
				if (!checkIpAddr(document.wanCfg.staticIp, false))
					return false;
					
				if (!checkIpAddr(document.wanCfg.staticNetmask, true))
					return false;
					
				if (document.wanCfg.staticGateway.value != "")
				{
					if (!checkIpAddr(document.wanCfg.staticGateway, false))
						return false;
				}
				
				//Static IP: dns should not be assigned from ISP when WAN is Static IP
				if ((document.wanCfg.dns1Type.options.selectedIndex == 0) ||
					(document.wanCfg.dns2Type.options.selectedIndex == 0)||
					(document.wanCfg.dns3Type.options.selectedIndex == 0))
				{
					alert("<%:WAN_Error_4%>");
					return false;
				}
			}
			
			if ((document.wanCfg.ethMTU.value < 1360) || (document.wanCfg.ethMTU.value > 1500)) {
				alert("<%:WAN_Error_20%>");
				return false;
			}
			
			if (isAllNum(document.wanCfg.ethMTU.value) == 0) {
				alert("<%:WAN_Error_22%>");
				document.wanCfg.ethMTU.value = document.wanCfg.ethMTU.defaultValue;
				document.wanCfg.ethMTU.focus();
				return false;
			}

			/*if( document.wanCfg.IP_Mode.options.selectedIndex == 0 ){
				if (document.wanCfg.auto_6rd[1].checked == true){
					if (document.wanCfg.zy6rd6prefix.value == ""){
						alert("<%:WAN_Error_6rd_1%>");
						return false;
					}
					if (document.wanCfg.zy6rd4ip.value == ""){
						alert("<%:WAN_Error_6rd_2%>");
						return false;
					}
					if (document.wanCfg.zy6rd6prefixleng.value - document.wanCfg.zy6rd4prefixleng.value != 32){
						alert("<%:WAN_Error_6rd_3%>");
						return false;
					}
				}
			}*/	
        }
		
		// IPv6 only
		else if ( document.wanCfg.IP_Mode.options.selectedIndex == 2 )
		{}
    }
	/*else if (document.wanCfg.connectionType.options.selectedIndex == 2) //MobileWan_3G
	 {
		//Dialed TEL Number
		if(document.wanCfg.wwanTel.value == ""){
			alert("Please enter dial string.");		
			return false;		
		}
	
		// APN
		if(document.wanCfg.wwanApn.value == ""){
		alert("Please enter APN.");		
		return false;		
		}

		// Max Idle Timeout
		if (document.wanCfg.connectionType_3G.value == "OnDemand"){ //dialOnDemand
			if ( isAllNum(wwanTimeOut.value) == 0 ) {
			alert('Max Idle Timeout "' + wwanTimeOut.value + '" is invalid. Please enter a number from 1 to 4320.');
			return false;		
			}
			if ( wwanTimeOut.value < 1 || wwanTimeOut.value > 4320 ) {
			alert('Max Idle Timeout "' + wwanTimeOut.value + '" is out of range. Please enter a number from 1 to 4320.');
			return false;		
			}			
		}
		// Static IP 
		if (document.wanCfg.ip_3g_Auto[1].checked == true) {
			if (!checkIpAddr(document.wanCfg.staticIP_3g, false))
				return false;
		}
	 }	*/
    else //unknown WAN Mode
		 return false;
     
	//DNS
	if (document.wanCfg.dns1Type.options.selectedIndex == 1) //DNS1 User-Defined
	{
        if(document.wanCfg.staticPriDns.value == "")
        {
            alert("<%:WAN_Error_12%>");
            return false;
        }
		
        if(document.wanCfg.staticPriDns.value == "0.0.0.0")
        {
            alert("<%:WAN_Error_13%>");
            return false;
        }
		
        if (!checkIpAddr(document.wanCfg.staticPriDns, false))
			return false;
    }
	
    if (document.wanCfg.dns2Type.options.selectedIndex == 1)
    {
        if(document.wanCfg.staticSecDns.value == "")
        {
            alert("<%:WAN_Error_14%>");
            return false;
        }
		
        if(document.wanCfg.staticSecDns.value == "0.0.0.0")
        {
            alert("<%:WAN_Error_15%>");
            return false;
        }
		
        if (!checkIpAddr(document.wanCfg.staticSecDns, false))
			return false;
    }
	
	if (document.wanCfg.dns3Type.options.selectedIndex == 1)
    {
        if(document.wanCfg.staticThiDns.value == "")
        {
            alert("<%:WAN_Error_16%>");
            return false;
        }
		
        if(document.wanCfg.staticThiDns.value == "0.0.0.0")
        {
            alert("<%:WAN_Error_17%>");
            return false;
        }
		
        if (!checkIpAddr(document.wanCfg.staticThiDns, false))
			return false;
    }
	
    if (document.wanCfg.WAN_MAC_Clone[1].checked == true)
	{
        if (!checkIpAddr(document.wanCfg.spoofIPAddr, false))
			return false;
    }
    else if (document.wanCfg.WAN_MAC_Clone[2].checked == true)
	{
		var re = /[A-Fa-f0-9][ACEace02468]:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}:[A-Fa-f0-9]{2}/;
		
		if (document.wanCfg.macCloneMac.value.length == 0)
		{
			alert("<%:WAN_Error_18%>");
			document.wanCfg.macCloneMac.focus();
			return false;
		}
		
		if (!re.test(document.wanCfg.macCloneMac.value))
		{
			alert("<%:WAN_Error_19%>");
			document.wanCfg.macCloneMac.focus();
			return false;
		}
	}
    pppoeNailup_Click(); //PPPoE
    pptpNailup_Click();//PPTP
    showWebMessage( 1 , '<%:Message%>' , '<%:msg_config%>' );
    return true;  

}

function connectionTypeSwitch()
{
    var config_status;  // old status for config
	
	show_div(false, "PPPoE_setting");
//	show_div(false, "PPTP_setting");
	show_div(false,  "Ethernet_setting"); 
	show_div(false, "PPPoE_v6DNS");
	show_div(false, "div_dhcp6_option");
	show_div(false, "v4Dns");
//	show_div(false, "MobileWan_setting");
	show_div(false, "macDns");
	show_div(true, "div_auto_6rd");
	
	//pppoe
	if (document.wanCfg.connectionType.options.selectedIndex == 0) {
		show_div(true, "PPPoE_setting");
		show_div(true, "v4Dns");
		show_div(true, "macDns");
		show_div(false, "div_auto_6rd");
		show_div(true, "div_static_6rd");
		document.wanCfg.auto_6rd[1].checked = true;
		
		//dual stack
		if( document.wanCfg.IP_Mode.options.selectedIndex == 1 ){
			show_div(true, "v4Dns");
			show_div(true, "PPPoE_v6DNS");
			show_div(true, "macDns");
		}
		
		//ipv6
		else if( document.wanCfg.IP_Mode.options.selectedIndex == 2 ){
			show_div(false, "v4Dns");
			show_div(true, "PPPoE_v6DNS");
			show_div(true, "macDns");
		}
		config_status = "PPPOE";
	}
/*
	//pptp
	else if (document.wanCfg.connectionType.options.selectedIndex == 1) {
		show_div(true, "PPTP_setting");
		show_div(true, "v4Dns"); 
		config_status = "PPTP";
    }
*/
	//ipoe
//  else if (document.wanCfg.connectionType.options.selectedIndex == 2) {
    else if (document.wanCfg.connectionType.options.selectedIndex == 1) {//Index 1 seems could not be passed if only have two option.
	
		//ipv4
		if (document.wanCfg.IP_Mode.options.selectedIndex == 0){
			show_div(true, "Ethernet_setting"); 
			show_div(true, "v4Dns");
			show_div(true, "macDns");
		}
		
		//dual stack
		else if (document.wanCfg.IP_Mode.options.selectedIndex == 1){
			show_div(true, "Ethernet_setting");             
			show_div(true, "v4Dns"); 			  
			show_div(true, "div_dhcp6_option");
			show_div(true, "macDns");
		}
		
		//ipv6
		else if (document.wanCfg.IP_Mode.options.selectedIndex == 2){
			show_div(true, "div_dhcp6_option");
			show_div(false, "Ethernet_setting");
			show_div(false, "v4Dns");
		}
		config_status = "Ethernet"; 
    }
/*  //3G
	else if (document.wanCfg.connectionType.options.selectedIndex == 2) {
		document.wanCfg.IP_Mode.options[0].selected=true;
		
		show_div(true, "MobileWan_setting");
		<% 		local driver = luci.sys.exec("cat /proc/bus/usb/devices | grep cdc_ether")
				local driver_cdc = string.match(driver,"cdc_ether")
				if not driver_cdc then
		%>
		show_div(true, "v4Dns");
		show_div(false, "6RD"); 
		<%end%>
        config_status = "MobileWan";    
    }
*/	
    return config_status;

}


function connectionTypeSwitch_3G()
{
	var connectionType_3G;
	show_div(false, "div_Idle");
	connectionType_3G = document.wanCfg.connectionType_3G.value;
	
	if(connectionType_3G == "OnDemand"){
		show_div(true, "div_Idle");
	}

}
function pppoe_nailup_switch()
{
    if (document.wanCfg.pppoeNailedup.checked == true)
	{
		document.wanCfg.pppoeIdleTime.disabled = true;
	}
    else
	{
		document.wanCfg.pppoeIdleTime.disabled = false;
	}
}

function pptp_nailup_switch()
{
    if (document.wanCfg.pptpNailedup.checked == true)
	{
		document.wanCfg.pptpIdleTime.disabled = true;
	}
    else
	{
		document.wanCfg.pptpIdleTime.disabled = false;
	}
}

function pppoeNailup_Click()
{
	document.wanCfg.pppoeNailedup.value = document.wanCfg.pppoeNailedup.checked ? "1": "0";
	return true;
}

function pptpNailup_Click()
{
	document.wanCfg.pptpNailedup.value = document.wanCfg.pptpNailedup.checked ? "1": "0";
	return true;
}

function ethernet_mode_switch()
{
    if (document.wanCfg.WAN_IP_Auto[0].checked == true) //DHCP
	{		
		document.wanCfg.staticIp.disabled = true;
	    document.wanCfg.staticNetmask.disabled = true;
        document.wanCfg.staticGateway.disabled = true;
        document.wanCfg.dns1Type.options.selectedIndex=0;
        document.wanCfg.dns2Type.options.selectedIndex=0;
		document.wanCfg.dns3Type.options.selectedIndex=0;
        //document.wanCfg.staticPriDns.disabled = true;
        //document.wanCfg.staticPriDns.value = "0.0.0.0";
        //document.wanCfg.staticPriDns.value = "";
        //document.wanCfg.staticSecDns.disabled = true;
		document.getElementById("staticPriDns").readOnly = true;
		document.getElementById("staticSecDns").readOnly = true;
		document.getElementById("staticThiDns").readOnly = true;
		//document.wanCfg.staticThiDns.disabled = true;
        //document.wanCfg.staticSecDns.value = "0.0.0.0";
        //document.wanCfg.staticSecDns.value = "";
	}
    else //Static IP
	{
		document.wanCfg.staticIp.disabled = false;
	    document.wanCfg.staticNetmask.disabled = false;
        document.wanCfg.staticGateway.disabled = false;
        document.wanCfg.dns1Type.options.selectedIndex=1;
        document.wanCfg.dns2Type.options.selectedIndex=1;
		document.wanCfg.dns3Type.options.selectedIndex=1;
        document.wanCfg.staticPriDns.disabled = false;
        document.wanCfg.staticSecDns.disabled = false;
		document.wanCfg.staticThiDns.disabled = false;
		document.getElementById("staticPriDns").readOnly = false;
		document.getElementById("staticSecDns").readOnly = false;
		document.getElementById("staticThiDns").readOnly = false;
	}
}

function DNS1TypeSwitch()
{
   if (document.wanCfg.dns1Type.options.selectedIndex == 0)
   {
        //document.wanCfg.staticPriDns.disabled = true;
		document.getElementById("staticPriDns").readOnly = true;
   }
   else
   {
        //document.wanCfg.staticPriDns.disabled = false;
		document.getElementById("staticPriDns").readOnly = false;
   }
   
   if (document.wanCfg.dns1Type.options.selectedIndex == 2)
   {
        document.wanCfg.staticPriDns.disabled = true;
   }
   else
   {
        document.wanCfg.staticPriDns.disabled = false;
   }
   
}

function DNS2TypeSwitch()
{
   if (document.wanCfg.dns2Type.options.selectedIndex == 0)
   {
        //document.wanCfg.staticSecDns.disabled = true;
		document.getElementById("staticSecDns").readOnly = true;
   }
   else
   {
        //document.wanCfg.staticSecDns.disabled = false;
		document.getElementById("staticSecDns").readOnly = false;
   }
   
   if (document.wanCfg.dns2Type.options.selectedIndex == 2)
   {
        document.wanCfg.staticSecDns.disabled = true;
   }
   else
   {
        document.wanCfg.staticSecDns.disabled = false;
   }
   
}

function DNS3TypeSwitch()
{
   if (document.wanCfg.dns3Type.options.selectedIndex == 0)
   {
        //document.wanCfg.staticThiDns.disabled = true;
		document.getElementById("staticThiDns").readOnly = true;
   }
   else
   {
        //document.wanCfg.staticThiDns.disabled = false;
		document.getElementById("staticThiDns").readOnly = false;
   }
   
   if (document.wanCfg.dns3Type.options.selectedIndex == 2)
   {
        document.wanCfg.staticThiDns.disabled = true;
   }
   else
   {
        document.wanCfg.staticThiDns.disabled = false;
   }
   
}

function DNSv6_1TypeSwitch()
{
   if (document.wanCfg.dnsv6_1Type.options.selectedIndex == 0)
   {
        //document.wanCfg.staticPriDnsv6.disabled = true;
		document.getElementById("staticPriDnsv6").readOnly = true;
   }
   else
   {
        //document.wanCfg.staticPriDnsv6.disabled = false;
		document.getElementById("staticPriDnsv6").readOnly = false;
   }
   
   if (document.wanCfg.dnsv6_1Type.options.selectedIndex == 2)
   {
        document.wanCfg.staticPriDnsv6.disabled = true;
   }
   else
   {
        document.wanCfg.staticPriDnsv6.disabled = false;
   }
   
}

function DNSv6_2TypeSwitch()
{
   if (document.wanCfg.dnsv6_2Type.options.selectedIndex == 0)
   {
        //document.wanCfg.staticSecDnsv6.disabled = true;
		document.getElementById("staticSecDnsv6").readOnly = true;
   }
   else
   {
        //document.wanCfg.staticSecDnsv6.disabled = false;
		document.getElementById("staticSecDnsv6").readOnly = false;
   }
   
   if (document.wanCfg.dnsv6_2Type.options.selectedIndex == 2)
   {
        document.wanCfg.staticSecDnsv6.disabled = true;
   }
   else
   {
        document.wanCfg.staticSecDnsv6.disabled = false;
   }
   
}

function DNSv6_3TypeSwitch()
{
   if (document.wanCfg.dnsv6_3Type.options.selectedIndex == 0)
   {
        //document.wanCfg.staticThiDnsv6.disabled = true;
		document.getElementById("staticThiDnsv6").readOnly = true;
   }
   else
   {
        //document.wanCfg.staticThiDnsv6.disabled = false;
		document.getElementById("staticThiDnsv6").readOnly = false;
   }
   
   if (document.wanCfg.dnsv6_3Type.options.selectedIndex == 2)
   {
        document.wanCfg.staticThiDnsv6.disabled = true;
   }
   else
   {
        document.wanCfg.staticThiDnsv6.disabled = false;
   }
   
}

function IPmodeConfig()
{
	var IPmode;
	
	show_div(false, "PPPoE_setting"); 
//	show_div(false, "PPTP_setting");
	show_div(false, "Ethernet_setting");
	show_div(false, "PPPoE_v6DNS");
	show_div(false, "div_dhcp6_option");
	show_div(false, "macDns");//only ipoe ipv6 disable.
	show_div(false, "6RD"); 
//	show_div(false, "MobileWan_setting");//3G

	//IPv4
    if (document.wanCfg.IP_Mode.options.selectedIndex == 0)
	{
		//show_div(true, "6RD");
		//show_div(true, "div_auto_6rd");
		//pppoe
		if (document.wanCfg.connectionType.options.selectedIndex == 0) {
			show_div(true, "6RD");
			show_div(true, "div_auto_6rd");
			show_div(true, "PPPoE_setting"); 
			show_div(true, "v4Dns");
			show_div(true, "macDns");
			show_div(false, "div_auto_6rd");
			show_div(true, "div_static_6rd");
			document.wanCfg.auto_6rd[1].checked = true;
		}
/*
		//pptp
		else if (document.wanCfg.connectionType.options.selectedIndex == 1) {
			show_div(true, "PPTP_setting");
			show_div(true, "v4Dns"); 
		}
*/
		//ipoe
//		else if (document.wanCfg.connectionType.options.selectedIndex == 2) {
		else if (document.wanCfg.connectionType.options.selectedIndex == 1) {//Index 1 seems could not be passed if only have two option.
			show_div(true, "6RD");
			show_div(true, "div_auto_6rd");
			show_div(true, "Ethernet_setting");
			show_div(true, "v4Dns");
			show_div(true, "macDns");
		}
/*		//3G
		else if (document.wanCfg.connectionType.options.selectedIndex == 2) {//Index 1 seems could not be passed if only have two option.
			show_div(true, "MobileWan_setting");
			show_div(true, "v4Dns");
			show_div(false, "6RD"); 
			if (document.wanCfg.connectionType_3G.value == "OnDemand") {
				show_div(true, "div_Idle");		
			}
			//show_div(true, "macDns");
		}
*/
		IPmode = IPv4_Only; 
	}
	
	//Dual Stack
	else if (document.wanCfg.IP_Mode.options.selectedIndex == 1)
	{
		//document.wanCfg.connectionType.options[2].selected=false; //for 3G only support IPv4
		//pppoe
		if (document.wanCfg.connectionType.options.selectedIndex == 0) {
			show_div(true, "PPPoE_setting");                             
			show_div(true, "v4Dns");   
			show_div(true, "PPPoE_v6DNS");
			show_div(true, "macDns");
		}
/*
		//pptp
		else if (document.wanCfg.connectionType.options.selectedIndex == 1) {
			show_div(true, "PPTP_setting");
			show_div(false, "IP_mode");
			show_div(true, "v4_only_mode");
			show_div(true, "v4Dns"); 
		}
*/
		//ipoe
//		else if (document.wanCfg.connectionType.options.selectedIndex == 2) {
		else if (document.wanCfg.connectionType.options.selectedIndex == 1) {//Index 1 seems could not be passed if only have two option.
			show_div(true, "Ethernet_setting");
			show_div(true, "v4Dns"); 	          
			show_div(true, "div_dhcp6_option");
			show_div(true, "macDns");
			
			<%
				local v6_proto = uci.get("network","wan","v6_proto")
			%>
			
			var IPv6_proto = "<%=v6_proto%>";
			
			if( IPv6_proto == "static" ) 
			{
				show_div(true, "div_static_addr");
				document.wanCfg.auto_dns[0].disabled = true;
				document.wanCfg.auto_dns[1].checked = true;
				show_div(true, "div_static_dns");
				show_div(false, "div_dhcp_option");
			}
			else 
			{
				document.wanCfg.auto_dns[0].disabled = false;
				show_div(false, "div_static_addr");
				show_div(true, "div_dhcp_option");
				if ( document.wanCfg.auto_dns[1].checked == true )
					show_div(true, "div_static_dns");
			}
			
		}	   
		IPmode = Daul_Stack;
	}
	
	//IPv6
	else if (document.wanCfg.IP_Mode.options.selectedIndex == 2)
	{
		//document.wanCfg.connectionType.options[2].selected=false; //for 3G only support IPv4
		//pppoe
		if (document.wanCfg.connectionType.options.selectedIndex == 0) {
			show_div(true, "PPPoE_setting");                              
			show_div(false, "v4Dns");       
			show_div(true, "PPPoE_v6DNS");
			show_div(true, "macDns");
		}
/*
		//pptp
		else if (document.wanCfg.connectionType.options.selectedIndex == 1) {
			show_div(true, "PPTP_setting");
			show_div(true, "v4Dns"); 
		}
*/
		//ipoe
//		else if (document.wanCfg.connectionType.options.selectedIndex == 2) {
		else if (document.wanCfg.connectionType.options.selectedIndex == 1) {//Index 1 seems could not be passed if only have two option.
			show_div(true, "div_dhcp6_option");
			show_div(false, "Ethernet_setting");
			show_div(false, "v4Dns");
		} 
		IPmode = IPv6_Only; 
	}
      return IPmode;  
}

function initValue()
{
	showWebMessage( 0, "<%:Message%>", "<%:Ready%>");	
	IPmodeConfig();	
}
 
function pppoe_wanIP_mode_switch()
{
    if (document.wanCfg.pppoeWanIPMode[0].checked == true)
	{		
		document.wanCfg.pppoeWanIpAddr.disabled = true;
		document.wanCfg.dns1Type.options.selectedIndex=0;
        document.wanCfg.dns2Type.options.selectedIndex=0;
		document.wanCfg.dns3Type.options.selectedIndex=0;
        document.wanCfg.staticPriDns.disabled = true;
        document.wanCfg.staticSecDns.disabled = true;
		document.wanCfg.staticThiDns.disabled = true;
	}
	else
	{
		document.wanCfg.pppoeWanIpAddr.disabled = false;
        document.wanCfg.dns1Type.options.selectedIndex=1;
        document.wanCfg.dns2Type.options.selectedIndex=1;
		document.wanCfg.dns3Type.options.selectedIndex=1;
        document.wanCfg.staticPriDns.disabled = false;
        document.wanCfg.staticSecDns.disabled = false;
		document.wanCfg.staticThiDns.disabled = false;
	}
}
 
function pptp_wanIP_mode_switch() 
{
    if (document.wanCfg.pptpWanIPMode[0].checked == true)
	{		
		document.wanCfg.pptpWanIpAddr.disabled = true;
		document.wanCfg.dns1Type.options.selectedIndex=0;
        document.wanCfg.dns2Type.options.selectedIndex=0;
		document.wanCfg.dns3Type.options.selectedIndex=0;
        document.wanCfg.staticPriDns.disabled = true;
        document.wanCfg.staticSecDns.disabled = true;
		document.wanCfg.staticThiDns.disabled = true;
	}
	else
	{
		document.wanCfg.pptpWanIpAddr.disabled = false;
        document.wanCfg.dns1Type.options.selectedIndex=1;
        document.wanCfg.dns2Type.options.selectedIndex=1;
		document.wanCfg.dns3Type.options.selectedIndex=1;
        document.wanCfg.staticPriDns.disabled = false;
        document.wanCfg.staticSecDns.disabled = false;
		document.wanCfg.staticThiDns.disabled = false;
	}
	
	if (document.wanCfg.pptp_config_ip[0].checked == true)
	{		
		document.wanCfg.pptp_staticIp.disabled = true;
	    document.wanCfg.pptp_staticNetmask.disabled = true;
        document.wanCfg.pptp_staticGateway.disabled = true;
	}
    else 
	{
		document.wanCfg.pptp_staticIp.disabled = false;
	    document.wanCfg.pptp_staticNetmask.disabled = false;
        document.wanCfg.pptp_staticGateway.disabled = false;
	}
} 

function mode_3g_switch()
{
    if (document.wanCfg.ip_3g_Auto[0].checked == true) //DHCP
	{		
		document.wanCfg.staticIp_3g.disabled = true;
		document.wanCfg.dns1Type.options.selectedIndex=0;
        document.wanCfg.dns2Type.options.selectedIndex=0;
		document.wanCfg.dns3Type.options.selectedIndex=0;
		document.getElementById("staticPriDns").readOnly = true;
		document.getElementById("staticSecDns").readOnly = true;
		document.getElementById("staticThiDns").readOnly = true;
	}
    else //Static IP
	{
		document.wanCfg.staticIp_3g.disabled = false;
		document.wanCfg.dns1Type.options.selectedIndex=1;
        document.wanCfg.dns2Type.options.selectedIndex=1;
		document.wanCfg.dns3Type.options.selectedIndex=1;		
        document.wanCfg.staticPriDns.disabled = false;
        document.wanCfg.staticSecDns.disabled = false;
		document.wanCfg.staticThiDns.disabled = false;
		document.getElementById("staticPriDns").readOnly = false;
		document.getElementById("staticSecDns").readOnly = false;
		document.getElementById("staticThiDns").readOnly = false;
	}
}
function mac_clone_switch()
{
    if (document.wanCfg.WAN_MAC_Clone[0].checked == true) //Factory Default
	{
	   document.wanCfg.spoofIPAddr.disabled = true;
	   document.wanCfg.macCloneMac.disabled = true;
	}
	else if (document.wanCfg.WAN_MAC_Clone[1].checked == true) //SpoofIP
	{
	   document.wanCfg.spoofIPAddr.disabled = false;
	   document.wanCfg.macCloneMac.disabled = true;
	}
	else if (document.wanCfg.WAN_MAC_Clone[2].checked == true) //MacClone
	{
	   document.wanCfg.spoofIPAddr.disabled = true;
	   document.wanCfg.macCloneMac.disabled = false;
	}
}

function changeControl()
{
   	var f = document.wanCfg;
	
	if (f.dhcp60Enable.checked == true)
	{
        f.vendor_id.disabled = false;
		//f.SecuredIP_all_flag.value = "";
	} else 
	{
		f.vendor_id.disabled = true;
		f.vendor_id.value ="";
	}
}


</script>
</head>
<body onLoad="initValue();">
<form method="post" name="wanCfg" action="<%=controller%>/expert/configuration/network/wan" onSubmit="return CheckValue()">
<div id="tabs"><ul>
    <li class="hightline"><a title="<%:Broadband%>"><span><%:Broadband%></span></a></li>
    <!-- <li><a href="<=controller%>/expert/configuration/network/wan/ipv6" title="IPv6"><span>IPv6</span></a></li> -->
    <li><a href="<%=controller%>/expert/configuration/network/wan/advanced" title="<%:Advanced%>"><span><%:Advanced%></span></a></li>
</ul><br class="clearfloat" /></div>
<div id="table">
  <ul>
    <li class="table_top"></li> <li class="table_content">
        <div class="data">
          <ul>
            <div class="title"><%:ISP_Parameters_for_Internet_Access%></div>
            <div class="w_text">
              <ul>
                <li class="left_table"> <%:Encapsulation%> :</li>
                <li class="right_table">
				  <% local proto = uci:get("network","wan","proto") %>
				  <% local ifname = uci:get("network","wan","ifname") %>
                  <% local v6_proto = uci:get("network","wan","v6_proto") %>
                  <select name="connectionType" size="1" onChange="connectionTypeSwitch();">
                    <option value="PPPOE" id="wanPPPOE" <% if proto == "pppoe" or v6_proto == "pppoe" then %>SELECTED<% end %>><%:PPPoE%> </option>
					<!-- <option value="PPTP" id="wanPPTP" <% if proto == "pptp" then %>SELECTED<% end %>><%:PPTP%> </option> -->
                    <option value="Ethernet" id="wanEthernet" <% if proto == "dhcp" or proto == "static" then %>SELECTED<% end %>><%:IPoE%> </option>
					<!--<option value="MobileWan" id="MobileWan" <% if proto == "MobileWan" then %>SELECTED<% elseif proto == "dhcp" and ifname  == "ether-3g" then %>SELECTED<% end %>>Mobile Wan:3G </option>-->
                  </select>
                </li>
              </ul>
            </div>	


            <div class="w_text">
              <ul>
                <li class="left_table"> IPv4 / IPv6 :</li>
                <li class="right_table">
                  <% local IP_version = uci:get("network","wan","IP_version") %>
                  <select name="IP_Mode" size="1" onChange="IPmodeConfig();">
					<option value="IPv4_Only" id="wanmode1" <% if IP_version == "IPv4_Only" then %>SELECTED<% end %>><%:IPv4_Only%></option>
					<option value="Dual_Stack" id="wanmode2" <% if IP_version == "Dual_Stack" then %>SELECTED<% end %>><%:Dual_Stack%></option>
					<option value="IPv6_Only" id="wanmode3" <% if IP_version == "IPv6_Only" then %>SELECTED<% end %>><%:IPv6_Only%></option>
                  </select>
                </li>
              </ul>
            </div>
			
		<span id = "PPPoE_setting" class = "off" >	
            <div class="space"></div>
            <div class="title"><b><%:PPP_Information%></b></div>
            <div class="w_text">
              <ul><% local UserName_pppoeUser = uci:get("network","wan","username") %>
                <li class="left_table"><%:PPP_Username%> : </li>
                <li class="right_table">
                  <input name="pppoeUser" type="text" size="32" maxlength="50" <% if UserName_pppoeUser then %>value="<%=UserName_pppoeUser%>"<% else %>value=""<% end %> />
                </li>
              </ul>
            </div>
            <div class="w_text">
              <ul><% local Password_pppoePass = uci:get("network","wan","password") %>
                <li class="left_table"><%:PPP_Password%> : </li>
                <li class="right_table">
                  <input type="password" name="pppoePass" size="32" maxlength="50"<% if Password_pppoePass then %>value="<%=Password_pppoePass%>"<% else %>value=""<% end %> />
                </li>
              </ul>
            </div>
	    <div class="w_text">
              <ul><% local pppoe_mtu = uci:get("network","wan","pppoe_mtu") %>
                <li class="left_table"><%:MTU%> : </li>
                <li class="right_table">
                  <input name="pppoeMTU" maxlength="15" size="15" <%if pppoe_mtu then%>value="<%=pppoe_mtu%>"<%else%>value="" <%end%>/>
                </li>
              </ul>
            </div>
            <div class="w_text">
              <ul><% local pppoeNailedup = uci:get("network","wan","pppoeNailedup")%>
                <li class="left_table"><%:PPP_Auto_Connect%> : </li>
                <li class="right_table">
                  <input type="checkbox" name="pppoeNailedup" value="1" <%if pppoeNailedup == "1" then%>checked="CHECKED"<%end%> onclick="pppoe_nailup_switch()"  />
                </li>
              </ul>
            </div>
            <div class="w_text">
              <ul><% local pppoeIdleTime = uci:get("network","wan","demand")%>
                <li class="left_table"><%:IDLE_Timeout_second%>: </li>
                <li class="right_table">
                  <input name="pppoeIdleTime" type="text" size="15" maxlength="15" <%if pppoeIdleTime then%>value="<%=pppoeIdleTime%>"<%else%>value="300"<%end%>  <%if pppoeNailedup == "1" then%> disabled <%end%> />
                </li>
              </ul>
            </div>
            <div class="w_text">
              <ul><% local pppoeServiceName = uci:get("network","wan","service")%>
                <li class="left_table"><%:PPPoE_Service_Name%> : </li>
                <li class="right_table">
                  <input name="pppoeServiceName" type="text" size="15" maxlength="15" <%if pppoeServiceName then%>value="<%=pppoeServiceName%>"<%else%>value=""<%end%> />
                </li>
              </ul>
            </div>
			<!-- 
            <div class="w_text">
              <ul><% local pppoePassthrough = uci:get("network","wan","pppoePassthrough")%>
                <li class="left_table">PPPoE Passthrough : </li>
                <li class="right_table">
                  <input name="pppoePassthrough" type="checkbox" value="1" <%if pppoePassthrough == "1" then%>checked="CHECKED"<%end%> />
                </li>
              </ul>
            </div>
			-->
			<%
				local pppoeWanIpAddr = uci:get("network","wan","pppoeWanIpAddr")
				local pppoe_ip=string.match(luci.sys.exec("ifconfig pppoe-wan"),"inet addr:(%d+.%d+.%d+.%d+)")
				if pppoe_ip == "10.64.64.64" then
					pppoe_ip = ""
				end
				local pppoe_status
				if pppoeWanIpAddr and pppoe_ip and pppoeWanIpAddr==pppoe_ip then pppoe_status="static" end
			-%>			
			<div class="space"></div>
            <div class="title"><b><%:WAN_IP_Address_Assignment%></b></div>
			<div class="w_text">
				<table width="95%" border="0" align="center" cellpadding="0" cellspacing="0">
                    <tr>
                      <td width="1%"><input type="radio" value="1" onclick="pppoe_wanIP_mode_switch()" name="pppoeWanIPMode" <%if pppoe_status~="static" then%>checked<%end%>/><%:Get_automatically_from_ISP%> </td> 
                    </tr>
                </table>
			</div>
			<div class="w_text">
				<table width="95%" border="0" align="center" cellpadding="0" cellspacing="0">
                    <tr>
                      <td width="1%"><input type="radio" value="0" onclick="pppoe_wanIP_mode_switch()" name="pppoeWanIPMode" <%if pppoe_status=="static" then%>checked<%end%>/><%:Use_Fixed_IP_Address%> </td>
                    </tr>
                </table>
			</div>
			<div class="w_text">
                <table width="92%" border="0" align="center" cellpadding="0" cellspacing="0">
                    <tr>
                      <td width="40%" ><%:My_WAN_IP_Address%> : </td>
                      <td><input name="pppoeWanIpAddr" maxlength=15 size=15 <%if pppoeWanIpAddr and pppoe_ip and pppoeWanIpAddr==pppoe_ip then%>value="<%=pppoeWanIpAddr%>"<%elseif pppoe_ip then%>value="<%=pppoe_ip%>"<%else%>value=""<%end%> <%if pppoe_status~="static" then%>disabled<%end%>></td>
                    </tr>  
                </table>
			</div>
		</span>	
		
		<span id = "PPTP_setting" class = "off" >	
            <div class="space"></div>
            <div class="title"><b><%:PPTP_Information%></b></div>
            <div class="w_text">
              <ul><% local UserName_pptpUser = uci:get("network","vpn","pptp_username") %>
                <li class="left_table"><%:PPTP_Username%> : </li>
                <li class="right_table">
                  <input name="pptpUser" type="text" size="32" maxlength="50" <% if UserName_pptpUser then %>value="<%=UserName_pptpUser%>"<% else %>value=""<% end %> />
                </li>
              </ul>
            </div>
            <div class="w_text">
              <ul><% local Password_pptpPass = uci:get("network","vpn","pptp_password") %>
                <li class="left_table"><%:PPTP_Password%> : </li>
                <li class="right_table">
                  <input type="password" name="pptpPass" size="32" maxlength="50"<% if Password_pptpPass then %>value="<%=Password_pptpPass%>"<% else %>value=""<% end %> />
                </li>
              </ul>
            </div>
            <div class="w_text">
              <ul><% local pptp_mtu = uci:get("network","wan","pptp_mtu") %>
                <li class="left_table"><%:MTU%> : </li>
                <li class="right_table">
                  <input name="pptpMTU" maxlength="15" size="15" <%if pptp_mtu then%>value="<%=pptp_mtu%>"<%else%>value="" <%end%>/>
                </li>
              </ul>
            </div>
            <div class="w_text">
              <ul><% local pptpNailedup = uci:get("network","vpn","pptp_Nailedup")%>
                <li class="left_table"><%:PPTP_Auto_Connect%> : </li>
                <li class="right_table">
                  <input type="checkbox" name="pptpNailedup" value="1" <%if pptpNailedup == "1" then%>checked="CHECKED"<%end%> onclick="pptp_nailup_switch()"  />
                </li>
              </ul>
            </div>
            <div class="w_text">
              <ul><% local pptpIdleTime = uci:get("network","vpn","pptp_demand")%>
                <li class="left_table"><%:IDLE_Timeout_second%>: </li>
                <li class="right_table">
                  <input name="pptpIdleTime" type="text" size="15" maxlength="15" <%if pptpIdleTime then%>value="<%=pptpIdleTime%>"<%else%>value="300"<%end%>  <%if pptpNailedup == "1" then%> disabled <%end%> />
                </li>
              </ul>
            </div>
			 <div class="space"></div>
            <div class="title"><%:PPTP_Configuration%></div>
			<div class="w_text">
              <ul><% local pptp_serverip = uci:get("network","vpn","pptp_serverip") %>
                <li class="left_table"><%:PPTP_SER_IP%> : </li>
                <li class="right_table">
                  <input name="pptp_serverIp" maxlength="15" size="15" <% if pptp_serverip then %>value="<%=pptp_serverip%>"<% else %>value="" <% end %>/>
                </li>
              </ul>
            </div>
			<% local pptp_proto = uci:get("network","vpn","proto") %>
            <div class="w_text"><input type="radio" value="1" onclick="pptp_wanIP_mode_switch()" name="pptp_config_ip" <% if pptp_proto ~= "static" then %>checked="CHECKED"<% end %> /> &nbsp;<%:Obtain_an_IP_Address_Automatically%></div>
            <div class="w_text"><input type="radio" value="0" onclick="pptp_wanIP_mode_switch()" name="pptp_config_ip" <% if pptp_proto == "static" then %>checked="CHECKED"<% end %> /> &nbsp;<%:Static_IP_Address%>  </div>
            <div class="w_text">
			 <table width="94%" border="0" align="center" cellpadding="0" cellspacing="0">
              <ul><% local pptp_ipaddr = uci:get("network","wan","ipaddr") %>
                <li class="left_table"><%:IP_Address%> : </li>
                <li class="right_table">
                  <input name="pptp_staticIp" maxlength="15" size="15" <% if pptp_ipaddr then %>value="<%=pptp_ipaddr%>"<% else %>value="" <% end %> <% if pptp_proto ~= "static" then %> disabled <% end %>/>
                </li>
              </ul>
			 </table>
            </div>
            <div class="w_text">
			 <table width="94%" border="0" align="center" cellpadding="0" cellspacing="0">
              <ul><% local pptp_netmask = uci:get("network","wan","netmask") %>
                <li class="left_table"><%:Subnet_Mask%>  : </li>
                <li class="right_table">
                  <input name="pptp_staticNetmask" maxlength="15" size="15" <%if pptp_netmask then%>value="<%=pptp_netmask%>"<%else%>value="" <%end%> <% if pptp_proto ~= "static" then %> disabled <% end %>/>
                </li>
              </ul>
			 </table>
            </div>
            <div class="w_text">
			 <table width="94%" border="0" align="center" cellpadding="0" cellspacing="0">
              <ul><% local pptp_gateway = uci:get("network","wan","gateway") %>
                <li class="left_table"><%:Gateway_IP_address%> : </li>
                <li class="right_table">
                  <input name="pptp_staticGateway" maxlength="15" size="15" <%if pptp_gateway then%>value="<%=pptp_gateway%>"<%else%>value="" <%end%> <% if pptp_proto ~= "static" then %> disabled <% end %>/>
                </li>
              </ul>
			 </table>
            </div>
			<%
				local pptpWanIpAddr = uci:get("network","vpn","pptpWanIpAddr")
				local pptp_ip=string.match(luci.sys.exec("ifconfig pptp-wan"),"inet addr:(%d+.%d+.%d+.%d+)")
				if pptp_ip == "10.64.64.64" then
					pptp_ip = ""
				end
				local pptp_status
				if pptpWanIpAddr and pptp_ip and pptpWanIpAddr==pptp_ip then pptp_status="static" end
			-%>		
			<div class="space"></div>
            <div class="title"><b><%:WAN_IP_Address_Assignment%></b></div>
			<div class="w_text">
				<table width="95%" border="0" align="center" cellpadding="0" cellspacing="0">
                    <tr>
                      <td width="1%"><input type="radio" value="1" onclick="pptp_wanIP_mode_switch()" name="pptpWanIPMode" <%if pptp_status~="static" then%>checked<%end%>/><%:Get_automatically_from_ISP%> </td> 
                    </tr>
                </table>
			</div>
			<div class="w_text">
				<table width="95%" border="0" align="center" cellpadding="0" cellspacing="0">
                    <tr>
                      <td width="1%"><input type="radio" value="0" onclick="pptp_wanIP_mode_switch()" name="pptpWanIPMode" <%if pptp_status=="static" then%>checked<%end%>/><%:Use_Fixed_IP_Address%> </td>
                    </tr>
                </table>
			</div>
			<div class="w_text">
                <table width="92%" border="0" align="center" cellpadding="0" cellspacing="0">
                    <tr>
                      <td width="40%" ><%:My_WAN_IP_Address%> : </td>
                      <td><input name="pptpWanIpAddr" maxlength=15 size=15 <%if pptpWanIpAddr and pptp_ip and pptpWanIpAddr==pptp_ip then%>value="<%=pptpWanIpAddr%>"<%elseif pptp_ip then%>value="<%=pptp_ip%>"<%else%>value=""<%end%> <%if pptp_status~="static" then%>disabled<%end%>></td>
                    </tr>  
                </table>
			</div>
		</span>
		
		<span id = "Ethernet_setting" class = "off" >	
            <div class="space"></div>
            <div class="title"><%:IP_Address%></div>
            <div class="w_text"><input type="radio" value="1" onclick="ethernet_mode_switch()" name="WAN_IP_Auto" <% if proto ~= "static" then %>checked="CHECKED"<% end %> /> &nbsp;<%:Obtain_an_IP_Address_Automatically%></div>
            <div class="w_text"><input type="radio" value="0" onclick="ethernet_mode_switch()" name="WAN_IP_Auto" <% if proto == "static" then %>checked="CHECKED"<% end %> /> &nbsp;<%:Static_IP_Address%>  </div>
            <div class="w_text">
              <ul><% local ipaddr = uci:get("network","wan","ipaddr") %>
                <li class="left_table"><%:IP_Address%> : </li>
                <li class="right_table">
                  <input name="staticIp" maxlength="15" size="15" <% if ipaddr then %>value="<%=ipaddr%>"<% else %>value="" <% end %> <% if proto ~= "static" then %> disabled <% end %>/>
                </li>
              </ul>
            </div>
            <div class="w_text">
              <ul><% local netmask = uci:get("network","wan","netmask") %>
                <li class="left_table"><%:Subnet_Mask%>  : </li>
                <li class="right_table">
                  <input name="staticNetmask" maxlength="15" size="15" <%if netmask then%>value="<%=netmask%>"<%else%>value="" <%end%> <% if proto ~= "static" then %> disabled <% end %>/>
                </li>
              </ul>
            </div>
            <div class="w_text">
              <ul><% local gateway = uci:get("network","wan","gateway") %>
                <li class="left_table"><%:Gateway_IP_address%> : </li>
                <li class="right_table">
                  <input name="staticGateway" maxlength="15" size="15" <%if gateway then%>value="<%=gateway%>"<%else%>value="" <%end%> <% if proto ~= "static" then %> disabled <% end %>/>
                </li>
              </ul>
            </div>
	    <div class="w_text">
              <ul><% local eth_mtu = uci:get("network","wan","eth_mtu") %>
                <li class="left_table"><%:MTU%> : </li>
                <li class="right_table">
                  <input name="ethMTU" maxlength="15" size="15" <%if eth_mtu then%>value="<%=eth_mtu%>"<%else%>value="" <%end%>/>
                </li>
              </ul>
            </div>
		</span>
		<span id = "MobileWan_setting" class = "off" >	
			<div class="space"></div>
			<div class="title"><b><font class="NaviText"><%:Connection_3G_Setup%></font></b></div>
			<%
		luci.sys.exec("cat /tmp/3g_Manufac | grep -v '^$' | grep -B 1 'OK' | sed 's/OK//g' | sed '/^$/d' >/tmp/Ma_3G")
		luci.sys.exec("cat /tmp/3g_Model | grep -v '^$' | grep -B 1 'OK' | sed 's/OK//g' | sed '/^$/d' >/tmp/Mo_3G")
		Manufacturer11 = luci.sys.exec("cat /tmp/Ma_3G")
		Manufacturer = Manufacturer11:gsub("[a-zA-Z]", string.upper)
		Model = luci.sys.exec("cat /tmp/Mo_3G")
		luci.sys.exec("rm /tmp/Mo_3G")
		luci.sys.exec("rm /tmp/Ma_3G")

		local Info_3g
		Info_3g = Manufacturer .. "" .. Model
		local driver = luci.sys.exec("cat /proc/bus/usb/devices | grep cdc_ether")
		local driver_cdc = string.match(driver,"cdc_ether")
		if Info_3g == "" then
			if driver_cdc then
				product_cdc=luci.sys.exec("cat /tmp/3g_product")
				Info_3g = product_cdc
			else
				Info_3g = "N/A"
			end
		end
		local Info_card
		local device_insert=luci.sys.exec("cat /tmp/3g-hotplug.debug")
		local device_insert_status=string.match(device_insert,"mode switch done")
		if device_insert_status then
			
			local disabled_3g = uci.get("network","3g","disabled")
			if disabled_3g == "0" then
				local sim_3g_info=luci.sys.exec("cat /tmp/3g_PIN_init")
				local pin_error=string.match(sim_3g_info,"ERROR")
				local pin_busy=string.match(sim_3g_info,"busy")
				if not pin_error then  --SIM card OK		
				
						local internet_state=luci.sys.exec("ifconfig ppp0")
						local ppp0_ip=string.match(internet_state,"inet addr:(%d+.%d+.%d+.%d+)")
						if ppp0_ip then
							Info_card = ""
						elseif driver_cdc then
							local internet_state=luci.sys.exec("ifconfig ether-3g")
							local ether3g_ip=string.match(internet_state,"inet addr:(%d+.%d+.%d+.%d+)")
							if ether3g_ip then
								Info_card = ""
							else
								Info_card = "CardNoResponse"
							end
						else							
							local card_over=luci.sys.exec("cat /tmp/3g_PIN_end")
							local card_over_pin=string.match(card_over,"SIM PIN")
							local card_over_puk=string.match(card_over,"SIM PUK")
							local card_ready=string.match(card_over,"READY")
							if card_over_pin then
								Info_card = "NeedPIN"
							elseif card_over_puk then
								Info_card = "NeedPUK"
							elseif card_ready then
								Info_card = ""
							else 
								Info_card = "CardNoResponse"
							end							
						end
				
				elseif pin_busy then
					local internet_state=luci.sys.exec("ifconfig ppp0")
					local ppp0_ip=string.match(internet_state,"inet addr:(%d+.%d+.%d+.%d+)")
					if ppp0_ip then
						Info_card = "UP"
					else
						Info_card = "CardNoResponse"
					end
				
				else
					Info_card = "DamagedSIM"
				end
				
			else --disable
				Info_card = "" 
			end
			
		else --device_insert_status
			Info_card = "" 
		end
		
		%>
		


			<div class="w_text">
			   <ul>
				  <li class="left_table"><%:Card_Description%>:</li>
				  <li class="right_table">&nbsp;&nbsp;<%=Info_3g%>
				    <% if Info_card == "DamagedSIM" then %><a href="javascript:alert('SIM card is not inserted or damaged.\nPlease check SIM card again.')">(<%:DamagedSIM%>)</a>			
					<% elseif Info_card == "CardNoResponse" then %><a href="javascript:alert('The 3G card is not responding.\nPlease check if the 3G card is attached to the device properly.')">(<%:CardNoResponse%>)</a>			
					<% elseif Info_card == "NeedPIN" then %><a href="<%=luci.dispatcher.build_url("expert", "configuration", "network", "wan")%>" onclick="window.open('<%=luci.dispatcher.build_url("expert", "configuration", "network", "wan","wwanpin")%>','SIMPINERROR',config='height=245,width=430,resizeable=no')"> (<%:NeedPIN%>)</a>
					<% elseif Info_card == "NeedPUK" then %><a href="<%=luci.dispatcher.build_url("expert", "configuration", "network", "wan")%>" onclick="window.open('<%=luci.dispatcher.build_url("expert", "configuration", "network", "wan","wwanpuk")%>','SIMPUKERROR',config='height=325,width=480,resizeable=no')"> (<%:NeedPUK%>)</a>
					<%end%>
				  </li>                                                                                               
              </ul>
            </div>
			<% if not driver_cdc then %>


			<div class="w_text">
				<ul>
				  <li class="left_table"><%:Username%>:</li>
				  <li class="right_table">

					<% local user_3G = uci:get("network","3g","user") %>
					<input type="text" name="3G_username" id="3G_username" <% if user_3G then %>value="<%=user_3G%>"<% else %>value=""<% end %> />
					(<%:optional_user%>)
				  </li>
				</ul>
			</div>
			<div class="w_text">
				<ul>
				  <li class="left_table"><%:Password%>:</li>
				  <li class="right_table">
					<% local password_3G = uci:get("network","3g","pass") %>
					<input type="password" name="3G_password" id="3G_password" <% if password_3G then %>value="<%=password_3G%>"<% else %>value=""<% end %> />
					(<%:optional_user%>)
				  </li>
				</ul>
			</div>
			<div class="w_text">
				<ul>
				  <li class="left_table"><%:PIN_Code%>: </li>
				  <li class="right_table">
					<% local PIN_3G = uci:get("network","3g","PIN") %>
					<input type="text" name="3G_PIN" id="3G_PIN" <% if PIN_3G then %>value="<%=PIN_3G%>"<% else %>value=""<% end %>/>
					<%:about_unlock_PIN%>				
				  </li>
				</ul>
			</div>
							<%
			local auth_times
			local pin_init=luci.sys.exec("cat /tmp/3g_PIN_init")
			local pin_init_ready=string.match(pin_init,"READY")
			local pin_init_add=string.match(pin_init,"+CPIN:ADD")
			if pin_init_add then --no support SIM times
				auth_times="N/A"
			elseif pin_init_ready then --fornoSIM
				auth_times="3"
			else
				local internet_state=luci.sys.exec("ifconfig ppp0")
				local ppp0_ip=string.match(internet_state,"inet addr:(%d+.%d+.%d+.%d+)")
				if ppp0_ip then
					auth_times="3"
				else				
					local pin_over=luci.sys.exec("cat /tmp/3g_PIN_end")
					local pin_over_ready=string.match(pin_over,"READY")
					local pin_over_pin=string.match(pin_over,"SIM PIN")
					local pin_over_puk=string.match(pin_over,"SIM PUK")
					if pin_over_ready then
						auth_times="3"
					elseif pin_over_pin then
						local auth_pin=luci.sys.exec("cat /tmp/3g_PIN_end | grep 'SIM PIN' | sed -n '1p' | cut -d ',' -f4")				
						auth_times=auth_pin
					elseif pin_over_puk then
						auth_times="0"
					else 
						auth_times="N/A"
					end
				
				end	
			end
			%>
			
			<div class="w_text">
				<ul>			  
				  <li class="left_table">   </li>
				  <li class="right_table">
				   (<%:PIN_remaining_auth%>: <%=auth_times%>)
				  </li>
				</ul>
			</div>
			<div class="w_text">
				<ul>
				  <li class="left_table"><%:Dial_Number%>:</li>
				  <li class="right_table">
					<% local DialNum_3G = uci:get("network","3g","DialNum") %>
					<input type="text" name="wwanTel" id="wwanTel" <% if DialNum_3G then %>value="<%=DialNum_3G%>"<% else %>value=""<% end %>/>
				  </li>
				</ul>
			</div>
			<div class="w_text">
				<ul>
				  <li class="left_table"><%:APN%>:</li>
				  <li class="right_table">
					<% local apn_3G = uci:get("network","3g","apn") %>
					<input type="text" name="wwanApn" id="wwanApn" <% if apn_3G then %>value="<%=apn_3G%>"<% else %>value=""<% end %>/>
				  </li>
				</ul>
			</div>
			<div class="w_text">
				<ul>
				  <li class="left_table"><%:Connection%>:</li>
				  <li class="right_table">
					  <% local NailUP_3G = uci:get("network","3g","NailUP") %>
					  <select name="connectionType_3G" size="1" onChange="connectionTypeSwitch_3G();">
						<option value="NailedUP" id="NailedUP" <% if NailUP_3G == "1" then %>SELECTED<% end %>><%:Nailed_UP%></option>
						<option value="OnDemand" id="OnDemand" <% if NailUP_3G == "0" then %>SELECTED<% end %>><%:On_Demand%></option>                  
					  </select>
				  </li>
				</ul>
			</div>	
			<span id="div_Idle" class="off">
			  <div class="w_text">
				<ul>
				  <li class="left_table">&nbsp;&nbsp;&nbsp; <%:Max_Idle_Timeout%>:</li>
				  <li class="right_table">
					<% local IDLE_3G = uci:get("network","3g","IDLE") %>
					<input type="text" name="wwanTimeOut" id="wwanTimeOut" <% if IDLE_3G then %>value="<%=IDLE_3G%>"<% else %>value=""<% end %>/>
					 (1-4320)<%:Seconds%>             
				  </li>
				</ul>
			  </div>
			</span>
					
			<div class="space"></div>
			<div class="title"><b><font class="NaviText"><%:IP_Address%></font></b></div>
			<% local proto = uci:get("network","3g","proto") %>
			<div class="w_text"><input type="radio" value="1" name="ip_3g_Auto" onclick="mode_3g_switch()" <% if proto ~= "static" then %>checked="CHECKED"<% end %>  /> &nbsp;<%:Obtain_an_IP_Address_Automatically%></div>
			<div class="w_text"><input type="radio" value="0" name="ip_3g_Auto" onclick="mode_3g_switch()" <% if proto == "static" then %>checked="CHECKED"<% end %> /> &nbsp;<%:Static_IP_Address%></div>
			<div class="w_text">
			  <ul><% local ipaddr = uci:get("network","3g","ipaddr") %>
				<li class="left_table">&nbsp;&nbsp;&nbsp; <%:IP_Address%> : </li>
				<li class="right_table">
				  <input name="staticIp_3g" maxlength="15" size="15" <% if ipaddr then %>value="<%=ipaddr%>"<% else %>value="" <% end %> <% if proto ~= "static" then %> disabled <% end %>/>
				</li>
			  </ul>
            </div>		
		<%end%>	
		</span>




<span id="6RD" class="off">
       <div class="space"></div>
              <div class="title">6RD</div>
	      <div class="w_text">
                 <ul>
		    <% 
			local ck6rdEnable = uci:get("network","general","wan6rd_enable")
			local auto_6rd = uci:get("network","wan","iface6rd") 
		        local prefix_6rd = uci:get("network","wan6rd","ip6prefix")
			local ipv4_6rd = uci:get("network","wan6rd","peeraddr")
			local ck6rdauto
			if auto_6rd or not prefix_6rd or not ipv4_6rd then
				ck6rdauto = 1;
			else
				ck6rdauto = 0;
			end
			local prefix_6rdleng = uci:get("network","wan6rd","ip6prefixlen")
			local prefix_6rdv4leng = uci:get("network","wan6rd","ip4prefixlen")
			
		    -%>
                    <li class="left_table"><input type="checkbox" name="zy6rdEnable" onclick="do6RDenableck(this)" <%if ck6rdEnable == "1" then%>checked<%end%> >&nbsp;Enable 6RD</li>
            	    <li class="right_table"></li>      
                 </ul>
               </div>
	<span id="6RD_enable" <% if ck6rdEnable == "1" then %> class="on" <% else %> class="off" <% end %>>
              <div class="w_text">
              	<ul>
		<span id="div_auto_6rd" class="true">
                  <li>		              
                    <input name="auto_6rd" id="radio" type="radio" value="auto" checked="checked" onclick="do6RDConfig(this)"   
     			<% if ck6rdauto == 1 then %>checked="CHECKED"<% end %> /> &nbsp;Automatically configured by DHCPC
                  </li>
		</span>
                  <li>
                     <input name="auto_6rd" id="radio2" type="radio" value="static"  onclick="do6RDConfig(this)"              
                     	<% if ck6rdauto == 0 then %>checked="CHECKED"<% end %> /> &nbsp;Manaually Configured                                            
                    </li>
        	<span id="div_static_6rd" <% if ck6rdauto == 0 then %> class="on" <% else %> class="off" <% end %>>  
		    <li class="left_table">Border Relay IPv4 Address: </li>
                    <li class="right_table">
                    	<input name="zy6rd4ip" id="zy6rd4ipId" maxlength="15" size="10" type="text" <% if ipv4_6rd then %> value="<%=ipv4_6rd%>" <% else %>value=""<% end %>/>
                    </li>                                   
                    <li class="left_table"> Service Provider IPv6 Prefix: </li>
                    <li class="right_table"> 
                      <input name="zy6rd6prefix" id="zy6rd6prefixId" maxlength="40" size="32" type="text" <% if prefix_6rd then %> value="<%=prefix_6rd%>" <% else %>value=""<% end %>/> &nbsp;
                    </li>
		    <li class="left_table"> Service Provider IPv6 Prefix length: </li>
                    <li class="right_table"> 
                      <input name="zy6rd6prefixleng" id="zy6rd6prefixlengId" maxlength="2" size="2" type="text" <% if prefix_6rdleng then %> value="<%=prefix_6rdleng%>" <% else %>value="32"<% end %>/> &nbsp;32~64
                    </li>
		    <li class="left_table"> IPv4 mask length: </li>
                    <li class="right_table"> 
                      <input name="zy6rd4prefixleng" id="zy6rd4prefixlengId" maxlength="2" size="2" type="text" <% if prefix_6rdv4leng then %> value="<%=prefix_6rdv4leng%>" <% else %>value="0"<% end %>/> &nbsp;0~32
                    </li>
               </span>
                </ul>
              </div>
	</span> 
</span>   

        
<span id="v4Dns" class="off">
		
			<%
				local offset = 0
				local t={}
				t=luci.sys.net.getDNS()
				local dns1Type, dns2Type, dns3Type
				if uci:get("network","wan","dns1") then	dns1Type=string.match(uci:get("network","wan","dns1"),"%a+") end
				if uci:get("network","wan","dns2") then dns2Type=string.match(uci:get("network","wan","dns2"),"%a+") end
				if uci:get("network","wan","dns3") then dns3Type=string.match(uci:get("network","wan","dns3"),"%a+") end					
				
			-%>
            <div class="space"></div>
            <div class="title"><b><font class="NaviText"><%:DNS_Server%></font></b></div>
            <div class="w_text">
              <ul>
                <li class="left_table"><%:First_DNS_Server%> :</li>
                <li class="right_table">
                  <select name="dns1Type" size="1" onChange="DNS1TypeSwitch();" >
                    <option value="ISP" id="wanDNSISP"<%if dns1Type=="ISP" then%>selected<%end%> ><%:Obtained_From_ISP%> </option>
                    <option value="USER" id="wanDNSUSER"<%if dns1Type=="USER" then%>selected<%end%>><%:User_Defined%> </option>
                    <option value="NONE" id="wanDNSNONE"<%if dns1Type=="NONE" then%>selected<%end%>><%:None%> </option>
                  </select>
                  <input name="staticPriDns" id="staticPriDns" type="text"  size="15" maxlength="15" <% if dns1Type == "NONE" then offset=offset+1 %> value="0.0.0.0" <%else%> value="<%=t[1]%>"<%end%> />
                </li>
              </ul>
            </div>
            <div class="w_text">
              <ul>
                <li class="left_table"><%:Second_DNS_Server%>  :</li>
                <li class="right_table">
                  <select name="dns2Type" size="1" onChange="DNS2TypeSwitch();" >
                    <option value="ISP" id="wanDNS2ISP"<%if dns2Type=="ISP" then%>selected<%end%>><%:Obtained_From_ISP%> </option>
                    <option value="USER" id="wanDNS2USER"<%if dns2Type=="USER" then%>selected<%end%>><%:User_Defined%> </option>
                    <option value="NONE" id="wanDNS2NONE"<%if dns2Type=="NONE" then%>selected<%end%>><%:None%> </option>
                  </select>
                  <input name="staticSecDns" id="staticSecDns" type="text" size="15" maxlength="15" <% if dns2Type == "NONE" then offset=offset+1%> value="0.0.0.0" <%else%> value="<%=t[2 - offset]%>"<%end%> />
                </li>
              </ul>
            </div>
            <div class="w_text">
              <ul>
                <li class="left_table"><%:Third_DNS_Server%> :</li>
                <li class="right_table">
                  <select name="dns3Type" size="1" onChange="DNS3TypeSwitch();" >
                    <option value="ISP" id="wanDNS3ISP"<%if dns3Type=="ISP" then%>selected<%end%>><%:Obtained_From_ISP%> </option>
                    <option value="USER" id="wanDNS3USER"<%if dns3Type=="USER" then%>selected<%end%>><%:User_Defined%> </option>
                    <option value="NONE" id="wanDNS3NONE"<%if dns3Type=="NONE" then%>selected<%end%>><%:None%> </option>
                  </select>
                  <input name="staticThiDns" id="staticThiDns" type="text" size="15" maxlength="15" <% if dns3Type == "NONE" then%> value="0.0.0.0" <%else%> value="<%=t[3 - offset]%>"<%end%> />
                </li>
              </ul>
            </div>
</span>

<span id="macDns" class="off">
			<%
				local wan_mac_status = uci:get("network","wan","wan_mac_status")
				if not wan_mac_status then wan_mac_status="0" end
				local wan_clone_ip = uci:get("network","wan","wan_clone_ip")				
				local wan_set_mac = uci:get("network","wan","wan_set_mac")
			%>
            <div class="space"></div>
            <div class="title"><b><font class="NaviText"><%:WAN_MAC_Address%></font></b></div>
			
            <div class="w_text">			
                <table >
                  <tbody><tr>
                    <td width="1%"><input onclick="mac_clone_switch()" value="0" name="WAN_MAC_Clone" type="radio" <% if wan_mac_status == "0" then %>checked="CHECKED"<% end %>>
                        <a id="wanmacop1"><%:Factory_default%> </a></td>
                  </tr>
                </tbody></table>
            </div>
            <div class="w_text">
                <table >
                  <tbody><tr>
                    <td width="1%"><input onclick="mac_clone_switch()" value="1" name="WAN_MAC_Clone" type="radio" <% if wan_mac_status == "1" then %>checked="CHECKED"<% end %>></td>
                      <td id="wanmacop2" width="38%"><%:Clone_the_computer_MAC_address%></td>   
                     <td> <input maxlength="17" size="17" name="spoofIPAddr" <%if wan_clone_ip then%> value="<%=wan_clone_ip%>" <%end%> <% if wan_mac_status ~= "1" then %>disabled="disabled" <% end %>></td>
                  </tr>
                </tbody></table>
            </div>
            <div class="w_text">
                <table >
                  <tbody><tr>
                    <td width="1%"><input onclick="mac_clone_switch()" value="2" name="WAN_MAC_Clone" type="radio" <% if wan_mac_status == "2" then %>checked="CHECKED"<% end %>></td>
                       <td id="wanmacop3" width="38%"><%:Set_WAN_MAC_Address%></td>
                      <td><input maxlength="17" size="17" name="macCloneMac" <%if wan_set_mac then%> value="<%=wan_set_mac%>" <%end%> <% if wan_mac_status ~= "2" then %>disabled="disabled" <% end %>></td>
                  </tr>
                </tbody></table>
            </div>
</span>

    <span id="PPPoE_v6DNS" class="off">
			<%
				local offset = 0
				local t={}
				t=luci.sys.net.getv6DNS()
				local dnsv6_1Type, dnsv6_2Type, dnsv6_3Type
				if uci:get("network","wan","dnsv6_1") then	dnsv6_1Type=string.match(uci:get("network","wan","dnsv6_1"),"%a+") end
				if uci:get("network","wan","dnsv6_2") then dnsv6_2Type=string.match(uci:get("network","wan","dnsv6_2"),"%a+") end
				if uci:get("network","wan","dnsv6_3") then dnsv6_3Type=string.match(uci:get("network","wan","dnsv6_3"),"%a+") end					
				
			-%>
            <div class="space"></div>
            <div class="title"><b><font class="NaviText"><%:IPv6_DNS_Server%></font></b></div>
            <div class="w_text">
              <ul>
                <li class="left_table"><%:First_DNS_Server%> :</li>
                <li class="right_table">
                  <select name="dnsv6_1Type" size="1" onChange="DNSv6_1TypeSwitch();" >
                    <option value="ISP" id="wanDNSv6ISP"<%if dnsv6_1Type=="ISP" then%>selected<%end%> ><%:Obtained_From_ISP%> </option>
                    <option value="USER" id="wanDNSv6USER"<%if dnsv6_1Type=="USER" then%>selected<%end%>><%:User_Defined%> </option>
                    <option value="NONE" id="wanDNSv6NONE"<%if dnsv6_1Type=="NONE" then%>selected<%end%>><%:None%> </option>
                  </select>
                  <input name="staticPriDnsv6" id="staticPriDnsv6" type="text"  size="40" maxlength="40" <% if dnsv6_1Type == "NONE" then offset=offset+1 %> value="::/0" <%else%> value="<%=t[1]%>"<%end%> />
                </li>
              </ul>
            </div>
            <div class="w_text">
              <ul>
                <li class="left_table"><%:Second_DNS_Server%>  :</li>
                <li class="right_table">
                  <select name="dnsv6_2Type" size="1" onChange="DNSv6_2TypeSwitch();" >
                    <option value="ISP" id="wanDNSv6_2ISP"<%if dnsv6_2Type=="ISP" then%>selected<%end%>><%:Obtained_From_ISP%> </option>
                    <option value="USER" id="wanDNSv6_2USER"<%if dnsv6_2Type=="USER" then%>selected<%end%>><%:User_Defined%> </option>
                    <option value="NONE" id="wanDNSv6_2NONE"<%if dnsv6_2Type=="NONE" then%>selected<%end%>><%:None%> </option>
                  </select>
                  <input name="staticSecDnsv6" id="staticSecDnsv6" type="text" size="40" maxlength="40" <% if dnsv6_2Type == "NONE" then offset=offset+1%> value="::/0" <%else%> value="<%=t[2 - offset]%>"<%end%> />
                </li>
              </ul>
            </div>
            <div class="w_text">
              <ul>
                <li class="left_table"><%:Third_DNS_Server%> :</li>
                <li class="right_table">
                  <select name="dnsv6_3Type" size="1" onChange="DNSv6_3TypeSwitch();" >
                    <option value="ISP" id="wanDNSv6_3ISP"<%if dnsv6_3Type=="ISP" then%>selected<%end%>><%:Obtained_From_ISP%> </option>
                    <option value="USER" id="wanDNSv6_3USER"<%if dnsv6_3Type=="USER" then%>selected<%end%>><%:User_Defined%> </option>
                    <option value="NONE" id="wanDNSv6_3NONE"<%if dnsv6_3Type=="NONE" then%>selected<%end%>><%:None%> </option>
                  </select>
                  <input name="staticThiDnsv6" id="staticThiDnsv6" type="text" size="40" maxlength="40" <% if dnsv6_3Type == "NONE" then%> value="::/0" <%else%> value="<%=t[3 - offset]%>"<%end%> />
                </li>
              </ul>
            </div>
    </span>
 
    <span id="div_dhcp6_option" class="off">
       <div class="space"></div>
              <div class="title"><%:IPv6_Address%></div>
              <div class="w_text">
              	<ul>
                    <li>
                       <% local proto = uci:get("network","wan","v6_proto") %>                   
                        <input name="auto_address" id="radio" type="radio" value="auto" checked="checked" onclick="doAddrConfig(this)"   
                       <% if proto ~= "static" then %>checked="CHECKED"<% end %> /> &nbsp;           
                       <%:Obtain_an_IP_Address_Automatically%>
                    </li>
 
                    <li> 
                       <% local proto = uci:get("network","wan","v6_proto") %> 
                         <input name="auto_address" id="radio2" type="radio" value="static"  onclick="doAddrConfig(this)"              
                       <% if proto == "static" then %>checked="CHECKED"<% end %> /> &nbsp;<%:Static_IP_Address%> 
                                            
                    </li>
                  <span id="div_static_addr" class="off">
                                        
                    <li class="left_table">
                      &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<%:IPv6_Address%>
                    </li>
                    <li class="right_table">
                      <% local v6_Fixed_StaticIp = uci:get("network","wan","ip6addr") %>     
                      <input name="ipv6_address" id="ipv6_address" maxlength="40" size="32" type="text" <% if v6_Fixed_StaticIp then %> value="<%=v6_Fixed_StaticIp%>" <% else %>value=""<% end %>/>
                    </li>
                    <li class="left_table">
                     	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<%:Prefix_length%>
                    </li>
                    <li class="right_table">
                     <% local v6_prefixlen = uci:get("network","wan","prefixlen") %> 
                    	<input name="prefix_length" id="prefix_length" maxlength="40" size="10" type="text" <% if v6_prefixlen then %> value="<%=v6_prefixlen%>" <% else %>value=""<% end %>/>
                    </li>
                    <li class="left_table">
                    	&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<%:IPv6_Default_Gateway%>
                    </li>
                    <li class="right_table">
                       <% local v6_gateway = uci:get("network","wan","ip6gw") %> 
                  	  <input name="ipv6_gateway" id="ipv6_gateway" maxlength="40" size="32" type="text"<% if v6_gateway then %> value="<%=v6_gateway%>" <% else %>value=""<% end %>/>
                    </li> 
                  </span>
                </ul>
              </div>
              <div class="space"></div>
              <div class="title"><%:IPv6_DNS_server%></div>
              <div class="w_text">
                <ul>
                  <li> 
                    <% local request_dns = uci:get("dhcp6c","basic", "domain_name_servers")%> 
                    <% local v6_dns_static = uci:get("network","wan", "IPv6_dns")%> 
                    <input name="auto_dns" id="radio" type="radio" value="enable" <%if not v6_dns_static then%> checked="checked" <%end%>onclick="doDNSConfig(this)" 
                    <% if request_dns == "1" then %>checked="CHECKED"<% end %> /> &nbsp;               
                    <%:IPv6_DNS_info%> 
                  </li>
                  <li>
                  	<input name="auto_dns" id="radio2" type="radio" value="disable" <%if v6_dns_static then%>checked="checked"<%end%>onclick="doDNSConfig(this)"/> &nbsp;
                  	<%:DNS_IPv6_Address%>
                  </li>
                  <span id="div_static_dns" class="off">
                    <% local v6_dns = uci:get("network","wan","IPv6_dns")%> 
                    <li class="left_table">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <%:IPv6_DNS_server%>:</li>
                    <li class="right_table">
                      <input name="ipv6_dns" id="ipv6_dns" maxlength="40" size="32" type="text"<% if v6_dns then %> value="<%=v6_dns%>" <% else %>value=""<% end %>/>
                    </li>
                  </span> 
           </ul>
           </div>	
   </span>		
            <div class="spaceair"></div>
    </ul>
</div>
    </li>
    <li class="table_button">
      <div class="button">
        <center>
          <input name="apply" value="<%:Apply%>" type="submit" />
          &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;
          <input name="Cancel" value="<%:Cancel%>" type="reset" />
        </center>
      </div>
    </li>
  </ul>
</div>
</form>
</body>
<script language="JavaScript">
   initValue();
   arp_error = '<%=luci.http.formvalue("arp_error")%>'
   error_addr = '<%=luci.http.formvalue("error_addr")%>'
   if (arp_error==1)
   alert("<%:Cannot_get_the_WAN_MAC_Address%>");
   showFullPath(' <%:Network%> > <%:Broadband%> ');
   showWebMessage( 0 , '<%:Message%>' , '<%:Ready%>' );
</script>
</html>


