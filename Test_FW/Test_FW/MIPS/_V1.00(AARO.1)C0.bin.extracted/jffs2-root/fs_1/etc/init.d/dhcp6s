#!/bin/sh /etc/rc.common 

get_ifname() {
	local interface=$1
	local ifname
	scan_interfaces
	config_get ifname "$interface" ifname
	printf '%s\n' "$ifname"
	return 0
}

start() {
	[ ! -e /etc/dhcp6sctlkey ] && `dd if=/dev/urandom count=1 2> /dev/null | md5sum | cut -d" " -f1 > /etc/dhcp6sctlkey`

	[ -e /var/run/dhcp6s.pid ] && return 0

	include /lib/network

	config_load "dhcp6s"
	
	local enabled
	config_get_bool enabled basic enabled 0
	[ $enabled -eq 0 ] && return 0
	
	logger starting dhcp6s
	
	local server_interface 
	config_get server_interface basic interface
	local server_ifname=$(get_ifname "$server_interface")
	
	local config_file
	config_get config_file basic config_file
	
	local domain_name_server1
	local domain_name_server2
	local domain_name_server3
	config_get domain_name_server1 basic domain_name_server1
	config_get domain_name_server2 basic domain_name_server2
	config_get domain_name_server3 basic domain_name_server3
	echo "option domain-name-servers $domain_name_server1 $domain_name_server2 $domain_name_server3;" > /etc/dhcp6s.conf

	[ ! -e $config_file ] && return 1
	
	/usr/sbin/dhcp6s -c $config_file $server_ifname
	
	## restart all the LAN ports, let clients to reallocate of DHCPv6 "information-request" packet.
	port_config w 1 1000 full 1
	port_config w 2 1000 full 1
	port_config w 3 1000 full 1
	port_config w 4 1000 full 1
	
	return 0
	
}

stop() {
	logger stopping dhcp6s
#	kill -TERM `cat /var/run/dhcp6s.pid`
	killall dhcp6s
	rm /var/run/dhcp6s.pid

	## kill -TERM  =>  kill -15 , must wait, or start() will fail !!
	sleep 1
	return 0
	
}
